{"instruction": "What is the database schema for the RSVP system?", "input": "", "output": "The RSVP system uses PostgreSQL with the following key models:\n\n**Campaign Model:**\n- id: String (Primary Key)\n- name: String\n- status: Enum (DRAFT, SCHEDULED, SENT, PAUSED, COMPLETED, FAILED)\n- meta: Json (stores audienceGroup, templateId, scheduledAt, etc.)\n- createdAt: DateTime\n- updatedAt: DateTime\n\n**CampaignTemplate Model:**\n- id: String (Primary Key)\n- name: String\n- subject: String\n- htmlBody: String\n- textBody: String\n- meta: Json (stores isActive, audienceGroup, etc.)\n- createdAt: DateTime\n- updatedAt: DateTime\n\n**AudienceMember Model:**\n- id: String (Primary Key)\n- email: String (Unique)\n- firstName: String?\n- lastName: String?\n- status: Enum (SUBSCRIBED, UNSUBSCRIBED, BOUNCED, COMPLAINED)\n- meta: Json (stores custom fields, tags, etc.)\n- createdAt: DateTime\n- updatedAt: DateTime\n\n**AudienceGroup Model:**\n- id: String (Primary Key)\n- name: String (Unique)\n- description: String?\n- meta: Json (stores rules, criteria, etc.)\n- createdAt: DateTime\n- updatedAt: DateTime\n- members: AudienceMember[] (Relation)\n\n**RSVP Model:**\n- id: String (Primary Key)\n- eventId: String\n- email: String\n- name: String?\n- status: Enum (PENDING, CONFIRMED, CANCELLED)\n- meta: Json (stores additional RSVP details)\n- createdAt: DateTime\n- updatedAt: DateTime\n\n**WorkflowRule Model:**\n- id: String (Primary Key)\n- name: String\n- trigger: String (e.g., 'CAMPAIGN_SENT', 'RSVP_CONFIRMED')\n- conditions: Json (e.g., { \"campaignId\": \"xyz\", \"minOpenRate\": 0.2 })\n- actions: Json (e.g., { \"type\": \"SEND_EMAIL\", \"templateId\": \"abc\" })\n- isEnabled: Boolean\n- createdAt: DateTime\n- updatedAt: DateTime\n\n**WorkflowExecution Model:**\n- id: String (Primary Key)\n- ruleId: String (Foreign Key to WorkflowRule)\n- triggeredAt: DateTime\n- status: Enum (PENDING, RUNNING, COMPLETED, FAILED)\n- logs: Json (stores execution details, errors)\n- createdAt: DateTime\n- updatedAt: DateTime"}

