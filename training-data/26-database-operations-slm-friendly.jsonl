{"instruction": "How does the database work in this RSVP application?", "input": "Explain database operations in simple terms that an AI can understand", "output": "I'll explain how the database works in this RSVP application in simple terms.\n\n**WHAT IS THE DATABASE?**\nThe database is like a digital filing cabinet that stores all the information for the RSVP application. It uses PostgreSQL (a type of database) and Prisma (a tool that helps us talk to the database).\n\n**MAIN THINGS STORED IN THE DATABASE:**\n\n1. **Audience Groups** - These are like mailing lists. Each group has:\n   - A name (like \"Tech Companies\")\n   - A description of what kind of businesses are in it\n   - A color for the interface\n   - Rules about who belongs in the group\n   - When it was created\n\n2. **Audience Members** - These are the individual businesses in each group:\n   - Business name and ID\n   - Primary and secondary email addresses\n   - Tags that describe the business\n   - Whether they've unsubscribed from emails\n   - When they were added to the group\n\n3. **Campaigns** - These are email marketing campaigns:\n   - Campaign name and description\n   - Current status (draft, running, completed, etc.)\n   - When it was created and last updated\n   - Extra information stored as JSON\n\n4. **Campaign Templates** - These are the email designs:\n   - Template name\n   - Email subject line\n   - Email content (both text and HTML versions)\n   - Variables that can be customized for each recipient\n   - Which campaign it belongs to\n\n5. **Campaign Schedules** - These control when emails are sent:\n   - Which campaign and audience group\n   - When the emails should be sent\n   - Current status (pending, running, completed)\n   - Description of the schedule\n\n6. **Campaign Sends** - These track each time emails are actually sent:\n   - Which schedule it came from\n   - When the emails were sent\n   - Status of the send operation\n   - Any extra data about the send\n\n7. **Email Jobs** - These are individual email sending tasks:\n   - Which send and which member it's for\n   - Current status (pending, sending, sent, failed)\n   - When the email was sent\n   - Any extra information\n\n8. **Email Events** - These track what happens to each email:\n   - Type of event (sent, delivered, opened, clicked, bounced)\n   - When the event happened\n   - Extra data about the event\n\n9. **RSVPs** - These are event registrations:\n   - Person's full name and organization\n   - Email and phone number\n   - Whether they're attending (yes/no/maybe)\n   - How many people they're bringing\n   - Dietary preferences and accessibility needs\n   - How they heard about the event\n   - Whether they want resources or an audit\n   - Their learning goals\n   - Technical info (IP address, browser, etc.)\n   - Marketing info (where they came from)\n\n10. **Visits** - These track website visitors:\n    - Visitor ID and session ID\n    - Which page they visited\n    - Where they came from\n    - Device and browser information\n    - Location information\n    - How long they stayed\n    - How much they scrolled\n    - How many times they clicked\n\n**HOW THE DATABASE CONNECTS THINGS:**\n\n- **One-to-Many Relationships:**\n  - One Audience Group can have many Audience Members\n  - One Campaign can have many Templates and Schedules\n  - One Schedule can have many Sends\n  - One Send can have many Email Jobs\n  - One Email Job can have many Events\n\n- **How Data Flows:**\n  1. Create an Audience Group (like \"Tech Companies\")\n  2. Add Audience Members to the group\n  3. Create a Campaign (like \"AI Event Invitation\")\n  4. Create Templates for the campaign\n  5. Create Schedules to send emails to the group\n  6. When it's time, create Sends and Email Jobs\n  7. Track Events as emails are sent and opened\n  8. Store RSVPs when people respond\n  9. Track Visits for analytics\n\n**COMMON DATABASE OPERATIONS:**\n\n1. **Creating Records:**\n   - When someone creates a new campaign, we store it in the campaigns table\n   - When someone RSVPs, we store it in the rsvps table\n   - When someone visits the website, we store it in the visits table\n\n2. **Reading Records:**\n   - When showing the campaign list, we read from the campaigns table\n   - When showing audience members, we read from the audience_members table\n   - When showing analytics, we read from multiple tables and combine the data\n\n3. **Updating Records:**\n   - When a campaign status changes, we update the campaigns table\n   - When someone unsubscribes, we update the audience_members table\n   - When an email is sent, we update the email_jobs table\n\n4. **Deleting Records:**\n   - When a campaign is cancelled, we might delete related records\n   - When cleaning up old data, we delete old visits and events\n\n**DATABASE OPTIMIZATION:**\n\n1. **Indexes:** These make searches faster:\n   - We index visitor IDs to find visits quickly\n   - We index group IDs to find members quickly\n   - We index creation dates to sort by time quickly\n\n2. **Batch Operations:** These handle many records at once:\n   - When sending emails to 1000 people, we create 1000 email jobs at once\n   - When updating many audience members, we do it in batches of 100\n\n3. **Transactions:** These ensure data consistency:\n   - When creating a campaign with templates and schedules, either all succeed or all fail\n   - When processing an RSVP, we create the RSVP record and visit record together\n\n**ERROR HANDLING:**\n\n1. **Connection Issues:**\n   - If the database is down, we show an error message\n   - We retry failed connections automatically\n   - We log all database errors for debugging\n\n2. **Data Validation:**\n   - We check that required fields are filled\n   - We validate email addresses and phone numbers\n   - We prevent duplicate entries where needed\n\n3. **Performance Monitoring:**\n   - We track how long database queries take\n   - We log slow queries that take more than 1 second\n   - We monitor database connection health\n\n**HOW THIS HELPS THE AI UNDERSTAND:**\n\nWhen you ask the AI to:\n- \"Create a new campaign\" - It knows to create records in campaigns, templates, and schedules tables\n- \"Show me audience analytics\" - It knows to read from audience_members, email_events, and visits tables\n- \"Send emails to a group\" - It knows to create sends and email jobs, then track events\n- \"Process an RSVP\" - It knows to create an RSVP record and update related tables\n- \"Show campaign performance\" - It knows to read from multiple tables and calculate metrics\n\nThe database is the foundation that stores all the information and relationships needed to run the RSVP application effectively."}

